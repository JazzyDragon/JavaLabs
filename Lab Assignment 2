
/**
 * Lab Assignment 2 CIT - 244
 *
 * @author joshua.rodstein 2.10.16
 */
public class LabAssign2REVISE {

    public static void main(String[] args) {
        boolean repeat = true;
        long input = 0L;
        int size = 0;
        int[] numArray = new int[0];
        java.util.Scanner scan = new java.util.Scanner(System.in);

        // Loop containing try catch that reprompts if anything other than 
        // numerical digits are entered
        do {
            System.out.print("Enter a credit card number as a long integer: "
                    + " --> ");
            try {
                input = scan.nextLong();
                repeat = false;
            } catch (java.util.InputMismatchException e) {
                scan.next(); // consume line, to avoid endless loop
            }
        } while (repeat);

        size = String.valueOf(input).length();
        if (size > 12 && size < 17) {
            numArray = new int[size];
            loadArray(numArray, input);
        } else {
            System.out.println(input + " is invalid");
        }

        if (validFormat(numArray)) {
            System.out.println(input + augArray(numArray));
        } else { //
            System.out.println(input + " is invalid");
        }

        System.exit(0);
    }

    public static void loadArray(int[] array, long cardNum) {
        for (int i = 0; i < array.length; i++) {
            array[i] = (int) (cardNum % 10);
            cardNum *= .1;
        }
    }

    public static String augArray(int[] array) {
        int temp, step1 = 0, step2 = 0;

        for (int i = 0; i < array.length; i++) {
            if (!(i != 1 && i % 2 == 0)) {
                array[i] *= 2;
                if (array[i] > 9) {
                    temp = array[i] % 10;
                    array[i] *= .1;
                    array[i] += temp;
                }
                step1 += array[i];
            } else {
                step2 += array[i];
            }
        }

        if ((step1 + step2) % 10 == 0) {
            return (" is valid");
        }

        return (" is invalid");
    }

    public static boolean validFormat(int[] numArray) {

        switch (numArray[numArray.length - 1]) {
            case 3:
                if (numArray[numArray.length - 2] == 7) {
                    return true;
                }
                break;
            case 4:
                return true;
            case 5:
                return true;
            case 6:
                return true;
            default:

                break;
        }

        return false;
    }
}

       
 //this looks good,     
      
      
    
       
    

